@model DevBooks.Web.ViewModels.BookViewModel

@section styles {
    <style>
        #success-msg-container,
        #fail-msg-container,
        #delete-msg-container,
        #img-fail-msg-container {
            display: none;
        }
    </style>
}


@section scripts {
    <script>

        $(function () {

            var
                bookDataForm = $("#book-data-form")[0],
                progressBar = $('#progress-bar');

            var Book = function () {
                this.id = ko.observable("@Model.Book.Id");
                this.title = ko.observable("@Model.Book.Title");
                this.author = ko.observable("@Model.Book.Author");
                this.isbn = ko.observable("@Model.Book.Isbn");
                this.price = ko.observable("@Model.Book.Price");
                this.pages = ko.observable("@Model.Book.Pages");
                this.description = ko.observable("@Model.Book.Description");
                this.publisher = ko.observable("@Model.Book.Publisher");
                this.imageName = ko.observable("@Model.Book.ImageName");
                this.imageUrl = ko.computed({
                    read: function () {
                        var
                            fileName = (this.imageName() === '') ?
                                'no-img-large.png' : this.imageName(),
                            url = '@Model.ImageUrlPrefix' + fileName;

                        return url;
                    },
                    write: function (value) {
                        var parts = value.split('/');
                        this.imageName(parts[parts.length - 1])
                    },
                    owner: this
                });
            };

            var ViewModel = function (book) {
                this.model = book;

                this.errorMessage = ko.observable();

                this.hideProgressBar = function (showAfterHideFunc) {
                    progressBar.fadeOut(function () {
                        showAfterHideFunc();
                    });
                };

                this.showError = function (error) {
                    var resetUI = function () {
                        $('#command-buttons').fadeIn();
                        $('#fail-msg-container').fadeIn();
                    };

                    vm.hideProgressBar(resetUI);

                    if (error.statusText) {
                        vm.errorMessage(error.statusText);
                    }

                    if (error.responseText) {
                        var
                            msg = JSON.parse(error.responseText),
                            keys = _.keys(msg),
                            txt = '';

                        _.each(keys, function (key) {
                            txt += msg[key] + ' ';
                        });
                        vm.errorMessage(txt);
                    }
                };

                this.showImageUpload = function () {
                    $('#upload-button').hide();
                    $('#upload-form-container').removeClass('none');
                };

                this.hideImageUpload = function () {
                    $('#upload-button').show();
                    $('#upload-form-container').addClass('none');
                };

                this.showImageError = function (error) {
                    $('#img-fail-msg-container').fadeIn();
                    vm.errorMessage(error.statusText);
                };

                this.showSuccess = function () {
                    var resetUI = function () {
                        $('#command-buttons').fadeIn();
                        $('#fail-msg-container').fadeOut();
                        $('#delete-msg-container').fadeOut();
                        $('#success-msg-container').fadeIn();
                    };

                    vm.hideProgressBar(resetUI);

                    $("#upload-form")[0].reset();

                    var fadeOut = function () {
                        $('#success-msg-container').fadeOut()
                    };

                    _.delay(fadeOut, 5000);
                };

                this.showDelete = function () {
                    $('#fail-msg-container').fadeOut();
                    $('#delete-msg-container').fadeIn();

                    $('.cmd').each(function (i, element) {
                        $(element).prop('disabled', true).addClass('muted');
                    });
                }

                this.uploadImage = function () {
                    if (window.FormData !== undefined) {
                        var
                            data = new FormData(),
                            file = $('#image-upload')[0].files[0];

                        data.append('image', file);
                        data.append('id', vm.model.id());

                        return booksDataService.saveImage(data);
                    }
                };

                this.hasImageToUpload = function () {
                    return $('#image-upload')[0].files.length > 0;
                };

                this.save = function () {

                    vm.hideImageUpload();

                    var validationUtility = new ValidationUtility();

                    if (validationUtility.validate('book-data-form')) {
                        $('#command-buttons').hide();
                        $('#progress-bar').fadeIn();

                        var book = ko.toJS(this.model);

                        booksDataService.save(book).done(function (response) {
                            if (response.id) {
                                vm.model.id(response.id);
                            }

                            if (vm.hasImageToUpload()) {
                                vm.uploadImage().done(function (result) {

                                    if (result.status === 'error') {
                                        vm.showImageError(result);
                                    }
                                    else {
                                        vm.model.imageUrl(result.imageUrl);
                                        vm.showSuccess();
                                    }

                                }).fail(function (error) {
                                    vm.showImageError();
                                });
                            } else {
                                vm.showSuccess();
                            }

                        }).fail(function (error) {
                            vm.showError(error);
                        });
                    }
                };

                this.requestDelConfirm = function () {
                    $('#del-confirm').modal();
                };

                this.del = function () {
                    var book = ko.toJS(this.model);
                    booksDataService.del(book).done(function (response) {
                        vm.showDelete();
                    }).fail(function (error) {
                        vm.showError(error);
                    }).always(function () {
                        $('#del-confirm').modal('hide');
                    });
                };
            };

            var vm = new ViewModel(new Book());
            ko.applyBindings(vm);

            H5F.setup([bookDataForm], {
                validClass: "valid",
                invalidClass: "invalid",
                requiredClass: "required"
            });
        });
    </script>
}


<div class="row" style="margin-top:50px;">
    <div class="col-md-5">
        <div class="row">
            <div class="col-md-10">
                <div>
                    <img data-bind="attr: { src: model.imageUrl }" class="fancy" />
                </div>
                <button id="upload-button" data-bind="click: showImageUpload" class="btn btn-sm">
                    <i class="icon-upload"></i> Upload Image
                </button>
                <div id="upload-form-container"
                     class="none alert alert-success push-down">
                    <form id="upload-form" action="/books/uploadimage"
                          method="POST" enctype="multipart/form-data">
                        <button class="btn btn-sm pull-right" data-bind="click: hideImageUpload">
                            x
                        </button>
                        <input id="image-upload" type="file" name="image" />
                    </form>
                </div>
            </div>
        </div>
        <div id="img-fail-msg-container"
             class="alert alert-error alert-block push-down">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <h4>Error</h4>
            <p>
                Oops, something bad happened!
                This is what the server has to say about it:
            </p>
            <p data-bind="text: errorMessage"></p>
        </div>
    </div>
    <form id="book-data-form">
        <div class="col-md-5 mobile-push-right">
            <div class="row">
                <div class="col-md-11  form-horizontal">

                    <div class="form-group">
                        <label for="title" class="col-sm-2 control-label">Title</label>
                        <div class="col-sm-10">
                            <input data-bind="value: model.title"
                                   title="Title"
                                   data-role="validate"
                                   data-content="Title is required."
                                   id="title" name="title"
                                   type="text" class="no-spin form-control" required autofocus />
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="author" class="col-sm-2 control-label">Author</label>
                        <div class="col-sm-10">
                            <input data-bind="value: model.author"
                                   title="Author"
                                   data-role="validate"
                                   data-content="Author is required."
                                   id="author" name="author"
                                   type="text" class="no-spin form-control" required />
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="publisher" class="col-sm-2 control-label">Publisher</label>
                        <div class="col-sm-10">
                            <input data-bind="value: model.publisher"
                                   title="Publisher"
                                   data-role="validate"
                                   data-content="Publisher is required."
                                   id="publisher" name="publisher"
                                   type="text" class="no-spin form-control" required />
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="isbn" class="col-sm-2 control-label">ISBN</label>
                        <div class="col-sm-10">
                            <input data-bind="value: model.isbn"
                                   title="ISBN"
                                   data-role="validate"
                                   data-content="ISBN is required."
                                   id="isbn" name="isbn"
                                   type="text" class="no-spin form-control" required />
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="price" class="col-sm-2 control-label">Price</label>
                        <div class="col-sm-10">
                            <input data-bind="value: model.price"
                                   title="Price"
                                   data-role="validate"
                                   data-content="Price is required."
                                   id="price" name="price"
                                   type="number" class="no-spin form-control" required />
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="pages" class="col-sm-2 control-label">Pages</label>
                        <div class="col-sm-10">
                            <input data-bind="value: model.pages"
                                   title="Pages"
                                   data-role="validate"
                                   data-content="Pages is required."
                                   id="pages" name="pages"
                                   type="number" class="no-spin form-control" required />
                        </div>
                    </div>

                    <hr />

                    <div class="form-group">

                        <label for="description">Description</label>
                        <textarea data-bind="value: model.description"
                                  id="description" name="description"
                                  required
                                  title="Description"
                                  data-role="validate"
                                  data-content="A description is required."
                                  class="form-control"></textarea>

                    </div>


                    @if (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("User")) //CanEdit
            {
                        <div class="row">
                            <div class="col-md-11">
                                <div class="progress fade-anim none" id="progress-bar">
                                    <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
                                    </div>
                                </div>
                                <div id="command-buttons" class="pull-right">
                                    @if (!Model.IsNew)
                                    {
                                        <a href="#" id="delete-link" class="cmd"
                                           data-bind="click: requestDelConfirm"
                                           tabindex="-1">Delete</a>
                                    }
                                    <button data-bind="click: save" type="button"
                                            class="btn btn-primary btn-large push-right cmd">
                                        Save
                                    </button>

                                </div>
                            </div>
                        </div>
                    }

                    <hr />

                    <!-- Message Containers  -->
                    <div class="row">
                        <div id="success-msg-container"
                             class="alert alert-success alert-block push-down" role="alert">
                            <button type="button" class="close" data-dismiss="alert">
                                ×
                            </button>
                            <h4>Changes Saved</h4>
                            <p>
                                The book information is saved.
                                You can @Html.ActionLink("add another book", "new", "books") or
                                @Html.ActionLink("return to the books list", "index", "books") if you wish.
                            </p>
                        </div>
                    </div>

                    <div class="row">
                        <div id="fail-msg-container"
                             class="alert alert-danger alert-block push-down" role="alert">
                            <button type="button" class="close" data-dismiss="alert">
                                ×
                            </button>
                            <h4>Error</h4>
                            <p>
                                Oops, something bad happened!
                                This is what the server has to say about it:
                            </p>
                            <p data-bind="text: errorMessage"></p>
                        </div>
                    </div>

                    <div class="row">
                        <div id="delete-msg-container"
                             class="alert alert-success alert-block push-down" role="alert">
                            <button type="button"
                                    class="close" data-dismiss="alert">
                                ×
                            </button>
                            <h4>Book Deleted</h4>
                            <p>The book is now removed from the system.</p>
                            <p>
                                You can return to the
                                @Html.ActionLink("full books list", "Index", "Books")
                                or @Html.ActionLink("add a new book", "new", "Books").
                            </p>
                        </div>
                    </div>

                    <!-- /Message Containers  -->

                </div>
            </div>
        </div>

    </form>
</div>

<div id="del-confirm" class="modal fade" tabindex="-1" role="dialog"
     aria-labelledby="del-confirm-label" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close"
                        data-dismiss="modal" aria-hidden="true">
                    ×
                </button>
                <h3 id="del-confirm-label">Confirm Delete</h3>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this book?</p>
                <div class="alert alert-danger" role="alert">
                    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                    <span class="alert alert-error push-down">
                        <strong>Note:</strong>
                        There is no undo for this action.
                    </span>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" data-dismiss="modal" aria-hidden="true">Close</button>
                <button class="btn btn-danger" data-bind="click: del">Delete Book</button>
            </div>
        </div>
    </div>
</div>
